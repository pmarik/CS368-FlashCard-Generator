void writeSaveFile(string username){
		//Append text file extension to the username to create a file
		string writtenFileName = username + ".txt";
		
		//Create a file with the username
		ofstream myfile;
		myfile.open(writtenFileName);

		//Used to initialize the name of a deck
		string deckName = "";

		//Loop through the list of decks and retrieve their name/data for output
		for(int i = 0; i < allDecks.size(); ++i){
		
			//For each deckname write its word-definitions below it
			deckName = (allDecks[i]).getDeckName();
			myfile << "Deck: " + deckName + "\n";

			int counts = 0;
			//Loop through and write all of the word-definition lines to the file
			for(int k = 0; k < allDecks[i].getDeckSize(); ++k){
				counts++;
				string lineToWrite = ((allDecks[i]).getCard(k)).getFlashcardLine();

				//If it is the last word-defintion line in the deck then do not add a newline, otherwise do
				if ((allDecks[i]).getDeckSize() == counts){
					myfile << lineToWrite;
				}
				else{
					myfile << lineToWrite + "\n";
				}
			}
			myfile << "\n";
		}

		//Close the file
		myfile.close();
		cout << "Deck(s) saved!" << endl;
	}
